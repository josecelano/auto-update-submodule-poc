name: Create auto pull request for submodule update

on:
  workflow_dispatch:
    inputs:
      library_sha:
        description: 'The library commit sha that triggered the workflow'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:  
          submodules: 'true'

      - name: Debug env vars
        shell: bash
        run: |
          echo -e "GITHUB_REPOSITORY: $GITHUB_REPOSITORY\n"
          echo -e "GITHUB_WORKSPACE: $GITHUB_WORKSPACE\n"
          echo -e "GITHUB_SHA: $GITHUB_SHA\n"
          echo -e "GITHUB_REF: $GITHUB_REF\n"
          echo -e "GITHUB_HEAD_REF: $GITHUB_HEAD_REF\n"
          echo -e "GITHUB_BASE_REF: $GITHUB_BASE_REF\n"
          echo -e "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME\n"
          echo -e "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH\n"

      - name: Setup DVC
        uses: iterative/setup-dvc@v1

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true

      - name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import-gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import-gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import-gpg.outputs.name }}"
          echo "email:       ${{ steps.import-gpg.outputs.email }}"

      - name: Update library submodule
        id: update-library
        run: |
          git submodule status
          echo "::set-output name=previous_ref::$(git submodule status | awk '{print $1}' | sed 's/-//' | sed 's/+//' | sed 's/U//')"
          git submodule update --remote
          echo "::set-output name=current_ref::$(git submodule status | awk '{print $1}' | sed 's/-//' | sed 's/+//' | sed 's/U//')"

      - name: Debug update submodule
        run: |
          echo "Output var 'previous_ref': ${{ steps.update-library.outputs.previous_ref }}"
          echo "Output var 'current_ref': ${{ steps.update-library.outputs.current_ref }}"

      - name: Create dummy signed commits
        run: |
          NOW=$(date)
          echo $NOW > public/images/latest_datetime.txt
          git add public/images/latest_datetime.txt
          git commit -S -m "update datetime to ${NOW}"

      - name: Debug git status after auto-commit
        run:  |
          git status
          git --no-pager diff

      - name: Commit submodule update
        if: ${{ steps.update-library.outputs.previous_ref != steps.update-library.outputs.current_ref }}
        run: |
          git add chinese-ideographs && git commit -m "auto update library submodule:  ${{ steps.update-library.outputs.current_ref }}"

      - name: Debug git status after submodule update
        run:  |
          git status
          git --no-pager diff          

      - name: Create Pull Request with library update and dummy commits
        uses: peter-evans/create-pull-request@v3
        with:
          add-paths: |
            public/images/**
            chinese-ideographs/**
          title: "Update submodule chinese-ideographs to ${{ steps.update-library.outputs.current_ref }}"
          body: |
            Update submodule chinese-ideographs
            - Previous ref: ${{ steps.update-library.outputs.previous_ref }}
            - Current ref: ${{ steps.update-library.outputs.current_ref }}
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request            
